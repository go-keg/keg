package server
{{/* gotype: github.com/go-keg/keg/cmd/codegen/new.Config */}}
import (
    {{if .UseGraphQL}}"github.com/99designs/gqlgen/graphql"
    "github.com/99designs/gqlgen/graphql/handler"
    "github.com/99designs/gqlgen/graphql/playground"{{end}}
    "github.com/go-kratos/kratos/v2/log"
    "github.com/go-kratos/kratos/v2/transport/http"
    "{{.PkgName}}/internal/app/{{.Service.KebabCase}}/conf"
)

// NewHTTPServer new HTTP server.
func NewHTTPServer(c *conf.{{.Service.PascalCase}}, logger log.Logger{{if .UseGraphQL}}, schema graphql.ExecutableSchema{{end}}) *http.Server {
    server := http.NewServer(c.Server.Http.HttpOptions(logger)...){{if .UseGraphQL}}
    server.Handle("/{{.Service.KebabCase}}/query", handler.NewDefaultServer(schema))
    server.HandleFunc("/{{.Service.KebabCase}}/graphql-ui", playground.Handler("{{.Service.PascalCase}}", "/{{.Service.KebabCase}}/query")){{end}}
    return server
}
