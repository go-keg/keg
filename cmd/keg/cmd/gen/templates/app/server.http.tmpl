{{- /* gotype: github.com/go-keg/keg/cmd/keg/config.App */}}
package server

import (
    {{- if .UseGraphQL}}
    "github.com/99designs/gqlgen/graphql"
    "github.com/99designs/gqlgen/graphql/handler"
    "github.com/99designs/gqlgen/graphql/playground"
    {{- end}}
    "github.com/go-kratos/kratos/v2/log"
    "github.com/go-kratos/kratos/v2/transport/http"
    "{{.GoModule}}/internal/app/{{.Name.KebabCase}}/conf"
)

// NewHTTPServer new HTTP server.
func NewHTTPServer(c *conf.{{.Name.PascalCase}}, logger log.Logger{{if .UseGraphQL}}, schema graphql.ExecutableSchema{{end}}) *http.Server {
    server := http.NewServer(c.Server.Http.HttpOptions(logger)...)
    {{- if .UseGraphQL}}
    server.Handle("/{{.Name.KebabCase}}/query", handler.NewDefaultServer(schema))
    server.HandleFunc("/{{.Name.KebabCase}}/graphql-ui", playground.Handler("{{.Name.PascalCase}}", "/{{.Name.KebabCase}}/query"))
    {{- end}}
    return server
}
